/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rxeu.problems;

import io.reactivex.Observable;
import org.jooq.lambda.Seq;
import org.jooq.lambda.tuple.Tuple2;
import rxeu.entity.Fib;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 * <p>
 * Answer: 4613732
 *
 * @author HlubyLuk
 */
public class P2 extends PBase {

    private static final int STOP = 4000000;

    @Override
    public int problem() {
        return 2;
    }

    @Override
    public void jool() {
        this.r(
                Seq.iterate(new Tuple2<>(1, 2), x -> new Tuple2<>(x.v2, x.v1 + x.v2))
                        .limitWhile(x -> x.v1 <= STOP)
                        .filter(x -> x.v1 % 2 == 0)
                        .sum(x -> x.v1)
                        .get()
        );
    }

    @Override
    public void rxJava() {
        Observable.<Integer, Fib>generate(() -> new Fib(), (x, y) -> {
            y.onNext(x.a);
            return new Fib(x.b, x.a + x.b);
        })
                .takeWhile(x -> x < STOP)
                .filter(x -> x % 2 == 0)
                .reduce((x, y) -> x + y)
                .subscribe(this::r);
    }
}
