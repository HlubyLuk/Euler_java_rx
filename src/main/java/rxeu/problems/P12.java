/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rxeu.problems;

import io.reactivex.Observable;
import org.jooq.lambda.Seq;
import org.jooq.lambda.tuple.Tuple;
import rxeu.entity.Tup2;

/**
 *
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle
 * number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * <p>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * <p>
 * Let us list the factors of the first seven triangle numbers:
 * <p>
 * 1: 1<br>
 * 3: 1,3<br>
 * 6: 1,2,3,6<br>
 * 10: 1,2,5,10<br>
 * 15: 1,3,5,15<br>
 * 21: 1,3,7,21<br>
 * 28: 1,2,4,7,14,28<br>
 * <p>
 * We can see that 28 is the first triangle number to have over five divisors.
 * <p>
 * What is the value of the first triangle number to have over five hundred divisors?
 * <p>
 * Answer: 76576500
 * <p>
 * @author HlubyLuk
 */
public class P12 extends PBase {

    @Override
    public int problem() {
        return 12;
    }

    @Override
    public void jool() {
        this.r(Seq.iterate(1, a -> a + 1).map(a -> a * (a + 1) / 2).map(a -> Tuple.tuple(a,
                Seq.iterate(1, b -> b + 1).limitWhile(b -> b * b <= a).filter(b -> a % b == 0)
                        .count() * 2)).skipWhile(a -> a.v2 < 500).limit(1).map(a -> a.v1)
                .findFirst().get());
    }

    @Override
    public void rxJava() {
        Observable.<Integer, Integer>generate(() -> 1, (a, b) -> {
            b.onNext(a);
            return a + 1;
        }).map(a -> a * (a + 1) / 2).map(a -> new Tup2<>(a, Observable.<Integer, Integer>generate(
                () -> 1, (b, c) -> {
                    c.onNext(b);
                    return b + 1;
                }).takeWhile(b -> b * b <= a).filter(b -> a % b == 0).count().blockingGet() * 2))
                .skipWhile(a -> a.b < 500).take(1).map(a -> a.a).subscribe(this::r);
    }
}
